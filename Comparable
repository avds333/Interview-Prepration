package com.aricent;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

/**
 * @author DIABLO
 *
 */
public class UI {
	private String srchItem ;
	private boolean flag ;
	private boolean flag2 ;
	private String delItem ;
	List< Student > li ;
	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	public void dataStorage()
	{
	    li = new ArrayList< Student >();
		Student s1 = new Student("A",23,23.3);
		Student s2 = new Student("B",19,24.3);
		Student s3 = new Student("C",53,940.3);
		Student s4 = new Student("D",73,690.3);
		Student s5 = new Student("E",93,5690.3);
		Student s6 = new Student("F",13,6490.3);
		Student s7 = new Student("G",63,3490.3);
		Student s8 = new Student("H",43,3290.3);
		li.add(s6);
		li.add(s7);
		li.add(s8);
		li.add(s1);
		li.add(s2);
		li.add(s3);
		li.add(s4);
		li.add(s5);
		
		System.out.println("Displaying Record: ");
		for(Student s : li)
		{
			System.out.println(s);
		}
		System.out.println("Enter the element to search: ");
		try{
			srchItem = br.readLine();
			for( int i = 0 ; i < li.size() ; i++  )
			{
				if( li.get(i).getName().equals(srchItem) )
				{
					System.out.println("Details are : "+li.get(i).getName()+" "+li.get(i).getAge()+" "+li.get(i).getFees());
					flag = true ;
				}
			}
			if( !flag )
			{
				System.out.println("Element does'nt exist !!!!");
			}
			System.out.println("Enter element to delete :");
			delItem = br.readLine() ; 
			for( int i = 0 ; i < li.size() ; i++  )
			{
				if( li.get(i).getName().equals(delItem) )
				{
					//System.out.println("Details are : "+li.get(i).getName()+" "+li.get(i).getAge()+" "+li.get(i).getFees());
					li.remove(li.get(i));
					System.out.println("Delete Successfully!!!!!");
					//System.out.println(li.get(i))
					flag2 = true ;
				}
			}
			if( !flag2 )
			{
				System.out.println("Element does'nt exist !!!!");
			}
			System.out.println("Displaying Record: ");
			for(Student s : li)
			{
				System.out.println(s);
			}
			
		}catch(Exception e)
		{
			e.printStackTrace();
		}
			
	}
	public void sortOptions()
	{
		while(true)
		{
			try{
			System.out.println("1.Sort by name\n2.Sort by fees\n");
			int choice = Integer.parseInt(br.readLine());
			switch( choice )
			{
			case 1:
				 Collections.sort(li);
				 display(li);
				 break ;
			case 2:
				 li.sort(salaryComprator);
				 //Below comment is for JDK7
				 //Collections.sort(li,salaryComprator);
				 display(li);
				 break ;
			default:
				System.out.println("Invalid value.");
			}
			}catch(Exception e)
			{
				e.printStackTrace();
			}
		}
	}
	public static Comparator<Student> salaryComprator = new Comparator<Student>()
	{
		public int compare(Student stu1 , Student stu2)
		{
			Double fees1 = stu1.getFees();
			Double fees2 = stu2.getFees();
			return fees1.compareTo(fees2);
		}
	};
	public void display(List<Student> li)
	{
		System.out.println("After sorting operation.");
		Iterator<Student> i = li.iterator();
		while( i.hasNext() )
		{
			System.out.println(i.next());
		}
	}
	
	public static void main(String[] args) 
	{
		UI ui = new UI() ;
		ui.dataStorage();
		ui.sortOptions();
	}
}

*********************************************************************************************************88
package com.aricent;
	public class Student implements Comparable <Student>
	{
	 private	String name ; 
	 private	int age ; 
	 private	double fees ;
	 Student( String name , int age , double fees )
	 {
		super();
	 	this.name = name ; 
	 	this.age = age ;
	 	this.fees = fees ;
	 }

	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public double getFees() {
		return fees;
	}
	public void setFees(double fees) {
		this.fees = fees;
	}

	@Override
	public String toString() {
		return "name=" + name + ", age=" + age + ", fees=" + fees ;
	}
	// Over-riding compareTo() method
	public int compareTo( Student stu )
	{
		return name.compareToIgnoreCase(stu.getName());
	}
}
